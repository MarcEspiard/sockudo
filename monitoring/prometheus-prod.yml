# =============================================================================
# Prometheus Production Configuration for Sockudo
# =============================================================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'sockudo-monitor'
    environment: 'production'

# Rules for alerting
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alert manager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Sockudo WebSocket Server
  - job_name: 'sockudo'
    static_configs:
      - targets: ['sockudo:9601']
    scrape_interval: 15s
    metrics_path: '/metrics'
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'sockudo-server'

  # Redis Monitoring (if redis_exporter is used)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s
    # Note: Requires redis_exporter container

  # MySQL Monitoring (if mysqld_exporter is used)
  - job_name: 'mysql'
    static_configs:
      - targets: ['mysql:3306']
    scrape_interval: 30s
    # Note: Requires mysqld_exporter container

  # Node Exporter (for system metrics)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # cAdvisor (for container metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s

  # Nginx Monitoring (if nginx-prometheus-exporter is used)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

# Remote write configuration (for external storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB